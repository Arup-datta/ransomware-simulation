
Ransomware Simulation Guide

Overview

This project simulates a ransomware attack for educational and research purposes. It includes components for the attacker (server and client) and tools for detection and mitigation on the victim machine.


Setup Instructions:

 1. Virtual Machines
   - Set up two virtual machines
     - Victim Client VM
   - Attacker Server VM
  
  In our testing we used Ubuntu 22.04 for both victim and attacker.

 2. Download Code
  - Download the provided codebase on both the client and server machines.

3. Installation
- Ensure python’s pip is installed on both machines:
    - To install pip run the following command:
   sudo apt install python3-pip

    -To check successful pip installation, run
  pip3 --version
  
- Now to run the installation script:
    - Go to ransomware-simulation/source/installation directory
    - Run the following command  
  python3 install.py
  
4. Configure Host File in victim’s client

    Open terminal in the attacker server and run the following command:

ifconfig

    Copy the ip.

      -  Now open terminal in the victim client’s vm and add the server's IP address to the client’s     `/etc/hosts` file:
    <server_ip> www.foo.com
  <server_ip> foo.com

    In our case it was:

192.168.1.84 www.foo.com
192.168.1.84 foo.com
Replace it with your attacker server vm’s ip.

5. Start Server
     -    Update the `server.py` file in `ransomware-simulation/sources/attacker-server`:
     -    Set the `host` value in the `app.run()` method inside the main method with the server’s IP.
     -    Now start the server by open the terminal and run:
  
   sudo python3 server.py
 

    The server won’t start if you don’t update the IP. However, if the run is successful you’ll get the url of the server and it’ll show an application running on port 80.


6. Test Server

     Verify server functionality by visiting `http://www.foo.com` in a browser from the client

        Machine.

    You’ll see a page showing encrypted keys and data in the page. 




7. Prepare Directories
- To create directories for testing, run the following commands:
   mkdir /home/student/test /home/student/backup
  chmod 700 /home/student/test /home/student/backup

- Now create one/some data files inside the test directory. To do it, go to /home/student/test/
- Run the following commands to create data files:
sudo nano data.txt

- Then put some text in it and save it. 
- This data will get encrypted because of ransomware attacks.


8. Run Detection and Mitigation
    - On the victim client VM, navigate to `ransomware-simulation/sources/detector` directory.
    - Then open the terminal and run the following commands to start the detection and mitigation  tool: 
  python3 ransomware-detector-and-mitigator.py
  

9. Initiate Attack
- Go into the `ransomware-simulation/sources/attacker-client’ directory. Open the terminal and run the following command:
  
  python3 dropper.py
  

It’ll make a successful attack and you’ll see an alert message popping up in your Ubuntu. 

10. Check encrypted data.
- Go to the data file you created in the ‘/home/student/test’. 
- Open terminal and run the following command to view the contents
cat data.txt

- You’ll see corrupted data, it won’t be readable.

11. Mitigation
- Now wait for some time (30 seconds)
- Run the following command by opening the terminal in ‘/home/student/test’.
cat data.txt

- This time you’ll see original uncorrupted data.






Ransomware Attack Workflow:

1. **Server** sends encoded attack code embedded in a response.
2. **Client** decodes and executes the attack code, encrypting the `/home/student/test` directory.
3. The **detector and mitigator**:
   - Detect the attack.
   - Halt malicious processes.
   - Restore encrypted files from `/home/student/backup` within 30 seconds.
Logs and Backup

- **Backup Process**:
  - Regularly backs up `/home/student/test` to `/home/student/backup`.
  - Halts during attacks and restores encrypted files.

- **Attack Logs**:
  - Located on the server, includes details such as UUID, encryption key, victim IP, and access time.

- **Emergency Decryptor**:
  - Retrieve the decryption key from `request_log.txt` on the server.


Screenshots and Examples:

Refer to the provided screenshots in the /ransomware-simulation/screenshots directory for:
- Detection and mitigation results.
- Log files and backup verification.
